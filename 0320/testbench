`timescale 1ns / 1ps

module tb_uart_fifo;

    reg clk; 
    reg reset;
    reg rx;
    wire tx;

    // tick gen
    wire w_tick;
    // rx to fifo_rx
    wire [7:0] w_rx_data;
    wire w_rx_done;

    // fifo_rx to fifo_tx
    wire [7:0] w_rx_data_fifo_rx;
    wire empty_fifo_rx;

    // fifo_tx to tx
    wire [7:0] w_rx_data_fifo_tx;
    wire empty_fifo_tx;
    wire full_fifo_tx;

    wire w_tx_done;
  
    // instance
    uart_rx DUT1(
        .clk(clk),
        .reset(reset),
        .tick(w_tick), //
        .rx(rx),
        .rx_done(w_rx_done),//
        .rx_data(w_rx_data)  //  
    );

    fifo DUT2_fr(
        .clk(clk),
        .reset(reset),
        .w_data(w_rx_data), //
        .wr(w_rx_done),//
        .full(),
        .rd(~full_fifo_tx),//
        .r_data(w_rx_data_fifo_rx),//
        .empty(empty_fifo_rx)  //  
    );

    fifo DUT3_ft(
        .clk(clk),
        .reset(reset),
        .w_data(w_rx_data_fifo_rx),//
        .wr(~empty_fifo_rx),//
        .full(full_fifo_tx),//
        .rd(~w_tx_done&~empty_fifo_tx),//
        .r_data(w_rx_data_fifo_tx),//
        .empty(empty_fifo_tx)     //   
    );

    uart_tx DUT4(
        .clk(clk),
        .rst(reset),
        .tick(w_tick),
        .start_trigger(~empty_fifo_tx),//
        .data_in(w_rx_data_fifo_tx),//
        .o_tx_done(w_tx_done),//
        .o_tx(tx)
    );

    baud_tick_gen DUT5(
        .clk(clk),
        .rst(reset),
        .baud_tick(w_tick)
    );

    always #5 clk = ~clk;

    initial begin
        clk = 1'b0;
        reset = 1'b1;
        rx = 1;
        
        #50;
        reset = 0;
        
        #10000;
        //수신
        send_data(8'h72);

        #10000;

        wait(w_tx_done);
        wait(!w_tx_done);

        $stop;
    end

// task : 데이터 송신 시뮬레이션 (tx -> rx loopback)
    task send_data(input [7:0] data);

        integer i;

        begin
            $display("Sending data: %h", data);

            //Start bit (Low)
            rx = 0;
            #(10 * 10417); // baud rate에 따른 시간 지연(9600bps 기준)

            // Data bits(LSB first)
            for(i=0; i<8; i = i + 1) begin
                rx = data [i];
                #(10 * 10417);
            end
            // stop bit(High)
            rx = 1;
            
            #(10*10417);
            $display("Data sent: %h", data);
        end
    endtask
endmodule

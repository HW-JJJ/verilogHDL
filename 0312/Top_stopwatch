`timescale 1ns / 1ps

module TOP_stopwatch(
    input clk,
    input reset,
    input [1:0] sw_mode,
    input btn_run,
    input btn_clear,
    output [3:0] fnd_comm,
    output [7:0] fnd_font, 
    output [3:0] led
);

    wire w_run, w_clear, run, clear;
    wire [6:0] msec; 
    wire [5:0] sec, min;
    wire [4:0] hour;

    stopwatch_cu U_stopwatch_cu(
        .clk(clk),
        .reset(reset),
        .i_btn_run(w_run),
        .i_btn_clear(w_clear),
        .o_run(run),
        .o_clear(clear)
    );

    stopwatch_dp U_stopwatch_dp(
        .clk(clk),
        .reset(reset),
        .run(run),
        .clear(clear),
        .msec(msec),
        .sec(sec),
        .min(min),
        .hour(hour)                
    );

    btn_debounce U_btn_debounce_run(
        .clk(clk),
        .reset(reset),
        .i_btn(btn_run),
        .o_btn(w_run)
    );

    btn_debounce U_btn_debounce_clear(
        .clk(clk),
        .reset(reset),
        .i_btn(btn_clear),
        .o_btn(w_clear)
    );

    fnd_controller U_fnd_controller(
       .clk(clk),
       .reset(reset),
       .sw_mode(sw_mode),
       .msec(msec),
       .sec(sec),
       .min(min),
       .hour(hour),
       .fnd_font(fnd_font),
       .fnd_comm(fnd_comm)
    );
    
    led_display U_led_display(
    .sw_mode(sw_mode),
    .led(led)
);

endmodule

module led_display(
    input [1:0] sw_mode,
    output reg [3:0] led
);
    always @(*) begin
        case(sw_mode)
        2'b00 : led = 4'b0001;
        2'b01 : led = 4'b0010;
        2'b10 : led = 4'b0100;
        2'b11 : led = 4'b1000;
        default : led = 4'b0000;
        endcase
    end
endmodule 

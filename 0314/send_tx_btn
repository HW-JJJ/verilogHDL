`timescale 1ns / 1ps

module send_tx_btn(
    input clk,
    input rst,
    input btn_start,
    output tx
    );
    
    wire w_btn_start, w_tx_done;
    reg [7:0] send_tx_data_reg, send_tx_data_next;

    btn_debounce U_btn_debounce(
        .clk(clk),
        .reset(rst),
        .i_btn(btn_start),
        .o_btn(w_btn_start)
    );

    uart_ctrl U_uart_ctrl(
        .clk(clk),
        .rst(rst),
        .btn_start(w_btn_start),
        .tx_in_data(send_tx_data_reg),
        .tx_done(w_tx_done),
        .tx(tx)
    );

    // send tx ASCII to PC
    always @(posedge clk, posedge rst) begin
        if(rst)
            send_tx_data_reg <= "0"; //8'h30
        else 
            send_tx_data_reg <= send_tx_data_next;
    end

    always @(*) begin

        send_tx_data_next = send_tx_data_reg;

        if(w_btn_start == 1'b1) begin
            if (send_tx_data_reg == "z")
                send_tx_data_next = "0";
            else
                send_tx_data_next = send_tx_data_reg + 1; // ASCII CODE VALUE INCREASE 1
        end        
    end
endmodule
